<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PostgreSql on 数据库的路上</title>
    <link>https://maozicb.github.io/categories/postgresql/</link>
    <description>Recent content in PostgreSql on 数据库的路上</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 16 May 2025 20:44:59 +0800</lastBuildDate>
    <atom:link href="https://maozicb.github.io/categories/postgresql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Postgresql 源码研究之基础备份工具pg_basebackup</title>
      <link>https://maozicb.github.io/posts/db/postgresql/postgresql-%E6%BA%90%E7%A0%81%E7%A0%94%E7%A9%B6%E4%B9%8B%E5%9F%BA%E7%A1%80%E5%A4%87%E4%BB%BD%E5%B7%A5%E5%85%B7pg_basebackup/</link>
      <pubDate>Fri, 16 May 2025 20:44:59 +0800</pubDate>
      <guid>https://maozicb.github.io/posts/db/postgresql/postgresql-%E6%BA%90%E7%A0%81%E7%A0%94%E7%A9%B6%E4%B9%8B%E5%9F%BA%E7%A1%80%E5%A4%87%E4%BB%BD%E5%B7%A5%E5%85%B7pg_basebackup/</guid>
      <description>&lt;h2 id=&#34;pg_basebackup介绍&#34;&gt;pg_basebackup介绍&lt;/h2&gt;&#xA;&lt;p&gt;pg_basebackup 是 PostgreSQL 内置的 &lt;strong&gt;物理备份工具&lt;/strong&gt;，用于创建数据库集群的 &lt;strong&gt;一致基础备份&lt;/strong&gt;。它支持 &lt;strong&gt;在线热备份&lt;/strong&gt;（备份时数据库可正常读写），是实现高可用性（如流复制）和灾难恢复的核心工具之一&lt;/p&gt;&#xA;&lt;h3 id=&#34;main函数介绍&#34;&gt;main函数介绍&lt;/h3&gt;&#xA;&lt;p&gt;根据代码分析，&lt;code&gt;main()&lt;/code&gt;函数在pg_basebackup.c中主要完成了以下逻辑步骤：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;初始化处理&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;解析命令行参数&lt;/li&gt;&#xA;&lt;li&gt;设置信号处理&lt;/li&gt;&#xA;&lt;li&gt;初始化全局变量和数据结构&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;连接数据库&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;建立与PostgreSQL服务器的连接&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;conn = GetConnection();&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;验证服务器版本兼容性&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;备份准备&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;创建或清理目标目录&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;verify_dir_is_empty_or_create(basedir, &amp;amp;made_new_pgdata, &amp;amp;found_existing_pgdata);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;处理表空间映射&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;设置WAL日志目录&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;执行备份&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;根据参数选择备份格式(plain/tar)&lt;/li&gt;&#xA;&lt;li&gt;启动后台WAL流接收进程&lt;/li&gt;&#xA;&lt;li&gt;通过流复制协议接收基础备份数据&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;关键函数调&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;BaseBackup()&lt;/code&gt; - 核心备份逻辑&lt;/p&gt;&#xA;&lt;p&gt;StartLogStreamer()` - 启动WAL流接收&lt;/p&gt;&#xA;&lt;p&gt;cleanup_directories_atexit()` - 退出时清理&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;全量备份&#34;&gt;全量备份&lt;/h3&gt;&#xA;&lt;p&gt;不指定增量备份情况下,默认是全量备份.&lt;/p&gt;&#xA;&lt;h4 id=&#34;主要步骤&#34;&gt;主要步骤&lt;/h4&gt;&#xA;&lt;h5 id=&#34;client-端-basebackup&#34;&gt;client 端 BaseBackup();&lt;/h5&gt;&#xA;&lt;p&gt;▶  通过libpq 发送&amp;quot;BASE_BACKUP&amp;quot; 命令给server&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2025/04/29/29WUvoMy6VFPQ5p.png&#34; alt=&#34;image-20250429161709054&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;▶   对于采用流复制备份单独启动一个进程接收wal日志（数据库在备份期间还存在并发写入的情况）&#x9;&#xA;StartLogStreamer(xlogstart..)&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;会使用临时物理复制槽位，保证wal在备份期间不丢失&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;zhou=# select slot_name from pg_replication_slots ;&#xA;    slot_name      &#xA;---------------------&#xA;pg_basebackup_19476&#xA;(1 row)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;▶ 循环接收服务端发送过来的备份数据直到结束&#xA;ReceiveArchiveStream(conn, client_compress);&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
