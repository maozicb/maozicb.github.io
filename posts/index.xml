<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 数据库的路上</title>
    <link>https://gitcode.com/maozicb/database_doc/posts/</link>
    <description>Recent content in Posts on 数据库的路上</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 16 May 2025 20:44:59 +0800</lastBuildDate>
    <atom:link href="https://gitcode.com/maozicb/database_doc/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>openGauss gs_om 命令源码解读</title>
      <link>https://gitcode.com/maozicb/database_doc/posts/opengauss_gs_om%E5%91%BD%E4%BB%A4%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/</link>
      <pubDate>Fri, 16 May 2025 20:44:59 +0800</pubDate>
      <guid>https://gitcode.com/maozicb/database_doc/posts/opengauss_gs_om%E5%91%BD%E4%BB%A4%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/</guid>
      <description>&lt;h1 id=&#34;opengauss-om&#34;&gt;openGauss-OM&lt;/h1&gt;&#xA;&lt;h2 id=&#34;opengauss-om简介&#34;&gt;openGauss-OM简介&lt;/h2&gt;&#xA;&lt;p&gt;openGauss-OM（Operation and Maintenance Tool）是基于Python 开发的 openGauss 数据库的运维工具，主要用于实现数据库的自动化部署、配置管理、监控告警及故障处理等功能，旨在提升数据库运维效率，降低运维复杂度&lt;/p&gt;&#xA;&lt;h2 id=&#34;gs_om-命令工具&#34;&gt;gs_om 命令工具&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;gs_om&lt;/strong&gt; 是 openGauss 数据库运维管理的核心命令行工具，是 &lt;strong&gt;openGauss-OM（Operation and Maintenance Tool）&lt;/strong&gt; 的重要组成部分。通过 gs_om，运维人员可以便捷地执行集群部署、配置管理、状态监控、故障处理等操作，实现数据库全生命周期的自动化管理。&lt;/p&gt;&#xA;&lt;h3 id=&#34;启动集群-gs_om--t-start&#34;&gt;启动集群 gs_om -t start&lt;/h3&gt;&#xA;&lt;p&gt;解析完命令后调用impl.doStart() 执行命令&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2025/05/16/fPMCEaHYxw3s9RT.png&#34; alt=&#34;image-20250516204459456&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;接着调用OmImplOLAP.doStartClusterByCm 函数启动集群&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2025/05/17/hPuJiGtXn8CWBaZ.png&#34; alt=&#34;image-20250517204822380&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;先启动cm&#34;&gt;先启动cm&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2025/05/18/4LQTdzvociHaWF6.png&#34; alt=&#34;image-20250518173126183&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>OpenGauss 启动集群竟靠删文件？这是什么「逆向操作」</title>
      <link>https://gitcode.com/maozicb/database_doc/posts/db/opengauss/opengauss_%E5%90%AF%E5%8A%A8%E9%9B%86%E7%BE%A4%E7%AB%9F%E9%9D%A0%E5%88%A0%E6%96%87%E4%BB%B6/</link>
      <pubDate>Fri, 16 May 2025 20:44:59 +0800</pubDate>
      <guid>https://gitcode.com/maozicb/database_doc/posts/db/opengauss/opengauss_%E5%90%AF%E5%8A%A8%E9%9B%86%E7%BE%A4%E7%AB%9F%E9%9D%A0%E5%88%A0%E6%96%87%E4%BB%B6/</guid>
      <description>&lt;h2 id=&#34;集群管理软件介绍&#34;&gt;集群管理软件介绍&lt;/h2&gt;&#xA;&lt;h3 id=&#34;om&#34;&gt;OM&lt;/h3&gt;&#xA;&lt;p&gt;运维管理模块(OperationManager)提供openGauss日常运维、配置管理的管理接口和工具.使用python语言编写,底层调用cm相关命令&lt;/p&gt;&#xA;&lt;h3 id=&#34;cm&#34;&gt;CM&lt;/h3&gt;&#xA;&lt;p&gt;（Cluster Manager）是一款集群资源管理软件。支持自定义资源监控，提供了数据库主备的状态监控、网络通信故障监控、文件系统故障监控、故障自动主备切换等能力。&lt;/p&gt;&#xA;&lt;p&gt;CM由cm_server,cm_agent,cm_ctl组成。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;cm_agent是部署在数据库每个主机上，用来启停和监控各个数据库实例进程的数据库管理组件。&lt;/li&gt;&#xA;&lt;li&gt;cm_server是用来进行数据库实例管理和实例仲裁的组件。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;cm_ctl是openGauss提供的用来控制数据库实例服务的工具。该工具主要供OM调用，及数据库实例服务自恢复时使用。&lt;/li&gt;&#xA;&lt;li&gt;om_monitor 是OpenGauss 后台守护进程,由crontab 管理,可以自动启动&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;集群启动原理&#34;&gt;集群启动原理&lt;/h2&gt;&#xA;&lt;h3 id=&#34;启动命令&#34;&gt;启动命令&lt;/h3&gt;&#xA;&lt;p&gt;在gs_om -t start 启动集群中,实际最后调用的是cm_ctl  start&lt;/p&gt;&#xA;&lt;h4 id=&#34;cm_ctl--start-源码函数调用&#34;&gt;cm_ctl  start 源码函数调用&lt;/h4&gt;&#xA;&lt;h5 id=&#34;调用do_start&#34;&gt;调用do_start()&lt;/h5&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2025/05/20/cJZFdzuwxjQerEs.png&#34; alt=&#34;image-20250520210020263&#34;&gt;&lt;/p&gt;&#xA;&lt;h5 id=&#34;调用startwholecluster--启动集群&#34;&gt;调用StartWholeCluster()  启动集群&lt;/h5&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; if (g_commandOperationInstanceId == 0 &amp;amp;&amp;amp; g_command_operation_azName == NULL &amp;amp;&amp;amp; g_commandOperationNodeId == 0) &#xD;&#xA; ...&#xD;&#xA; CM_RETURN_IFERR(StartWholeCluster());&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2025/05/21/hkHyTMsXDpRKx4v.png&#34; alt=&#34;image-20250521213747969&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;检查 集群的状态 CheckClusterRunningStatus()&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;检查状态的核心命令是通过pssh 读取hosts($GAUSSHOME/bin/hosts文件)列表,并发在所有节点执行 cm_ctl check -B cm_agent -T /opt/huawei/install/app/bin/cm_agent  命令&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;启动集群 ,调用 start_cluster()函数&lt;/p&gt;&#xA;&lt;p&gt;start_cluster() 函数的核心原理是通过pssh 在集群每个节点执行rm 命令删除cluster_manual_start 等文件&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pssh 执行的远程命令&#xD;&#xA;&#xA;source /etc/profile&#xD;&#xA;pssh -i \&#xD;&#xA;  -t 60 \&#xD;&#xA;  -O ConnectTimeout=5 \&#xD;&#xA;  -O ConnectionAttempts=3 \&#xD;&#xA;  -O ServerAliveInterval=15 \&#xD;&#xA;  -O ServerAliveCountMax=3 \&#xD;&#xA;  -h /opt/huawei/install/app/bin/hosts \&#xD;&#xA;  &amp;#34;rm -f /opt/huawei/install/app/bin/cluster_manual_start /opt/huawei/install/app/bin/instance_manual_start_*;&#xD;&#xA;   if [ -f /opt/huawei/install/app/bin/cluster_manual_pause ]; then&#xD;&#xA;     touch /opt/huawei/install/app/bin/cluster_manual_starting;&#xD;&#xA;   fi&amp;#34; &amp;gt; /opt/huawei/install/app/bin/pssh.out&#xD;&#xA;&#xA;if [ $? -ne 0 ]; then&#xD;&#xA;  cat /opt/huawei/install/app/bin/pssh.out&#xD;&#xA;fi&#xD;&#xA;&#xA;rm -f /opt/huawei/install/app/bin/pssh.out&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;删除文件触发启动集群&#34;&gt;删除文件触发启动集群&lt;/h5&gt;&#xA;&lt;p&gt;启动集群是通过删除$GAUSSHOME/bin下的cluster_manual_start文件来实现的&lt;/p&gt;</description>
    </item>
    <item>
      <title>Postgresql 源码研究之基础备份工具pg_basebackup</title>
      <link>https://gitcode.com/maozicb/database_doc/posts/db/postgresql/postgresql-%E6%BA%90%E7%A0%81%E7%A0%94%E7%A9%B6%E4%B9%8B%E5%9F%BA%E7%A1%80%E5%A4%87%E4%BB%BD%E5%B7%A5%E5%85%B7pg_basebackup/</link>
      <pubDate>Fri, 16 May 2025 20:44:59 +0800</pubDate>
      <guid>https://gitcode.com/maozicb/database_doc/posts/db/postgresql/postgresql-%E6%BA%90%E7%A0%81%E7%A0%94%E7%A9%B6%E4%B9%8B%E5%9F%BA%E7%A1%80%E5%A4%87%E4%BB%BD%E5%B7%A5%E5%85%B7pg_basebackup/</guid>
      <description>&lt;h2 id=&#34;pg_basebackup介绍&#34;&gt;pg_basebackup介绍&lt;/h2&gt;&#xA;&lt;p&gt;pg_basebackup 是 PostgreSQL 内置的 &lt;strong&gt;物理备份工具&lt;/strong&gt;，用于创建数据库集群的 &lt;strong&gt;一致基础备份&lt;/strong&gt;。它支持 &lt;strong&gt;在线热备份&lt;/strong&gt;（备份时数据库可正常读写），是实现高可用性（如流复制）和灾难恢复的核心工具之一&lt;/p&gt;&#xA;&lt;h3 id=&#34;main函数介绍&#34;&gt;main函数介绍&lt;/h3&gt;&#xA;&lt;p&gt;根据代码分析，&lt;code&gt;main()&lt;/code&gt;函数在pg_basebackup.c中主要完成了以下逻辑步骤：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;初始化处理&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;解析命令行参数&lt;/li&gt;&#xA;&lt;li&gt;设置信号处理&lt;/li&gt;&#xA;&lt;li&gt;初始化全局变量和数据结构&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;连接数据库&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;建立与PostgreSQL服务器的连接&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;conn = GetConnection();&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;验证服务器版本兼容性&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;备份准备&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;创建或清理目标目录&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;verify_dir_is_empty_or_create(basedir, &amp;amp;made_new_pgdata, &amp;amp;found_existing_pgdata);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;处理表空间映射&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;设置WAL日志目录&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;执行备份&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;根据参数选择备份格式(plain/tar)&lt;/li&gt;&#xA;&lt;li&gt;启动后台WAL流接收进程&lt;/li&gt;&#xA;&lt;li&gt;通过流复制协议接收基础备份数据&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;关键函数调&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;BaseBackup()&lt;/code&gt; - 核心备份逻辑&lt;/p&gt;&#xA;&lt;p&gt;StartLogStreamer()` - 启动WAL流接收&lt;/p&gt;&#xA;&lt;p&gt;cleanup_directories_atexit()` - 退出时清理&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;全量备份&#34;&gt;全量备份&lt;/h3&gt;&#xA;&lt;p&gt;不指定增量备份情况下,默认是全量备份.&lt;/p&gt;&#xA;&lt;h4 id=&#34;主要步骤&#34;&gt;主要步骤&lt;/h4&gt;&#xA;&lt;h5 id=&#34;client-端-basebackup&#34;&gt;client 端 BaseBackup();&lt;/h5&gt;&#xA;&lt;p&gt;▶  通过libpq 发送&amp;quot;BASE_BACKUP&amp;quot; 命令给server&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2025/04/29/29WUvoMy6VFPQ5p.png&#34; alt=&#34;image-20250429161709054&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;▶   对于采用流复制备份单独启动一个进程接收wal日志（数据库在备份期间还存在并发写入的情况）&#x9;&#xA;StartLogStreamer(xlogstart..)&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;会使用临时物理复制槽位，保证wal在备份期间不丢失&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;zhou=# select slot_name from pg_replication_slots ;&#xA;    slot_name      &#xA;---------------------&#xA;pg_basebackup_19476&#xA;(1 row)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;▶ 循环接收服务端发送过来的备份数据直到结束&#xA;ReceiveArchiveStream(conn, client_compress);&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
